#!/usr/bin/env bash
# Multiline directories array
directories=(
    ~/.dotfiles/work/repos
    ~/.dotfiles/projects
    ~/.dotfiles/work
    ~/.dotfiles/personal
)
#comment
# Array for excluded directories or symbolic links
# Add full paths or patterns here
excluded=(
    ~/.cargo
    ~/.cache
    # Other paths or patterns to exclude
)

# Convert the excluded array into a grep-compatible pattern
exclusion_pattern=$(printf "|%s" "${excluded[@]}")
exclusion_pattern=${exclusion_pattern:1} # remove leading '|'

# Function to expand directory depth if it ends with ".git"
expand_directory() {
    local dir="$1"
    if [[ "$dir" == *.git ]]; then
        find "$dir" -mindepth 1 -maxdepth 3 -type d
    else
        find "$dir" -mindepth 1 -maxdepth 1 -type d
    fi
}

# Function to handle symbolic links
expand_symlink() {
	local dir="$1"
	find "$dir" -mindepth 1 -maxdepth 3 -type l -exec bash -c 'target="$(readlink -f "$0")"; [ -d "$target" ] && (echo "$target"; ls -d "$target"/* )' {} \; | grep '.git' |  grep -v -e '.git/refs' -e '.git/packed-refs' -e '.git/objects' -e '.git/info' -e '.git/hooks' -e '.git/config' -e '.git/description' -e '.git/branches' -e '.git/HEAD' -e '.git/worktrees'
	find "$dir" -mindepth 1 -maxdepth 1 -type l -exec bash -c 'target="$(readlink -f "$0")"; [ -d "$target" ] && echo "$0"' {} \; | grep -v '.git' 
	find ~/.dotfiles -maxdepth 1 -type d
}

# Check if directories or symbolic links to directories exist and add them to a new array
existing_directories=()
for dir in "${directories[@]}"; do
    if [ -d "$dir" ]; then
        existing_directories+=("$dir")
    elif [ -L "$dir" ]; then
        link_target=$(readlink -f "$dir")
        if [ -d "$link_target" ]; then
            existing_directories+=("$dir")
        fi
    fi
done
# Construct find command to get directories
find_command="for dir in \${existing_directories[*]}; do expand_directory \"\$dir\"; done"

# Find symbolic links and check if they point to directories
symlink_command="for dir in \${existing_directories[*]}; do expand_symlink \"\$dir\"; done"

# Combine results from both find commands and exclude specified paths
combined_results=$({ eval "$find_command"; eval "$symlink_command"; } | grep -Ev "$exclusion_pattern" | sort -u)

# Use fzf to select from the found directories
if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(echo "$combined_results" | fzf -s)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

# Start tmux session
if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $selected_name -c "$selected"
    exit 0
fi

# Create a detached session if it doesn't exist
if ! tmux has-session -t=$selected_name 2> /dev/null; then
    tmux new-session -ds $selected_name -c "$selected"
fi

# Switch to the tmux session
tmux switch-client -t $selected_name
